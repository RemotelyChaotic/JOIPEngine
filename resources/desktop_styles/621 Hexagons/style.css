/*
 ----- QSplitter
*/
QSplitter {
  min-height: 18px;
  min-width: 18px;
  max-height: 18px;
  max-width: 18px;
  background: transparent;
}

QSplitter::handle:horizontal {
  image: url(ui/ButtonDotsVert.png);
}
QSplitter::handle:vertical {
  image: url(ui/ButtonDotsHoriz.png);
}

/*
 ----- QCheckBox, QRadioButton
*/
QCheckBox,
QRadioButton {
  color: rgb(180, 199, 219);
  spacing: 5px;
}

QTreeView::indicator,
QTableView::indicator,
QListView::indicator,
QRadioButton::indicator,
QGroupBox::indicator,
QCheckBox::indicator {
  width: 24px;
  height: 24px;
}

QTreeView::indicator:unchecked,
QTableView::indicator::unchecked,
QListView::indicator::unchecked,
QRadioButton::indicator:unchecked,
QGroupBox::indicator:unchecked,
QCheckBox::indicator:unchecked {
  image: url(ui/ButtonCheckBoxEmpty.png);
}

QTreeView::indicator:unchecked:hover,
QTableView::indicator::unchecked:hover,
QListView::indicator::unchecked:hover,
QRadioButton::indicator:unchecked:hover,
QGroupBox::indicator:unchecked:hover,
QCheckBox::indicator:unchecked:hover {
  color: white;
  image: url(ui/ButtonCheckBoxEmpty.png);
}

QTreeView::indicator:unchecked:pressed,
QTableView::indicator::unchecked:pressed,
QListView::indicator::unchecked:pressed,
QRadioButton::indicator:unchecked:pressed,
QGroupBox::indicator:unchecked:pressed,
QCheckBox::indicator:unchecked:pressed {
  color: white;
  image: url(ui/ButtonCheckBoxEmpty.png);
}

QTreeView::indicator:checked,
QTableView::indicator::checked,
QListView::indicator::checked,
QRadioButton::indicator:checked,
QGroupBox::indicator:checked,
QCheckBox::indicator:checked {
  image: url(ui/ButtonCheckBox.png);
}

QTreeView::indicator:checked:pressed,
QTableView::indicator::checked:pressed,
QListView::indicator::checked:pressed,
QRadioButton::indicator:checked:pressed,
QGroupBox::indicator:checked:pressed,
QCheckBox::indicator:checked:pressed {
  color: white;
  image: url(ui/ButtonCheckBox.png);
}

QTreeView::indicator:indeterminate:hover,
QTableView::indicator::indeterminate:hover,
QListView::indicator::indeterminate:hover,
QRadioButton::indicator:indeterminate:hover,
QGroupBox::indicator:indeterminate:hover,
QCheckBox::indicator:indeterminate:hover {
  color: white;
  image: url(ui/ButtonCheckBox.png);
}

QTreeView::indicator:indeterminate:pressed,
QTableView::indicator::indeterminate:pressed,
QListView::indicator::indeterminate:pressed,
QRadioButton::indicator:indeterminate:pressed,
QGroupBox::indicator:indeterminate:pressed,
QCheckBox::indicator:indeterminate:pressed {
  color: white;
  image: url(ui/ButtonCheckBox.png);
}


/*
 ----- QGroupBox, QTabWidget
*/
QGroupBox,
QTabWidget::pane {
  background-color: rgb(21, 47, 86);
  border: none;
  border-radius: 5px;
  padding: 6px;
}

CResourceModelView>QTabWidget::pane {
  border: 0;
  border-radius: 0px;
  padding: 0px;
}

QGroupBox::title {
  color: rgb(180, 199, 219);
  subcontrol-origin: margin;
  subcontrol-position: top center; /* position at the top center */
  padding: 0 3px;
}

QTabWidget::tab-bar {
  top: 5px;
  left: 5px; /* move to the right by 5px */
}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {
  color: rgb(180, 199, 219);
  border: none;
  border-radius: 5px;
  padding: 5px;
  background: transparent;
  min-width: 8ex;
}

QTabBar::tab:hover {
  color: white;
  background: transparent;
}

QTabBar::tab:selected {
  color: white;
  background: rgb(21, 47, 86);
}

QTabBar::tab:!selected {
  margin-top: 2px; /* make non-selected tabs look smaller */
}

QTabBar::tab:disabled {
  min-width: 0px;
  max-width: 0px;
  border: none;
  border-radius: 0px;
  padding: 0px;
  color: rgba(0,0,0,0);
  background-color: rgba(0,0,0,0);
}

/*
 ----- QLabel, QToolTip, CTitleLabel
*/
QToolTip {
  color: rgb(180, 199, 219);
  background-color: rgb(40, 74, 129);
}

QLabel {
  color: rgb(180, 199, 219);
  background-color: transparent;
}

QLabel#SearchIcon {
  border-image: url(ui/ButtonSearch.png);
  min-width: 20px;
  min-height: 20px;
  max-width: 20px;
  max-height: 20px;
}
QLabel#PlayButton {
  border-image: url(ui/ButtonPlay.png);
}
QLabel#ExitButton {
  border-image: url(ui/ButtonExit.png);
}
QLabel#WarningIcon {
  border-image: url(ui/WarningIcon.png);
}
QLabel#ErrorIcon {
  border-image: url(ui/ButtonIcon.png);
}
QLabel#IconBackground {
  qproperty-pixmap: url(ui/IconBg.svg);
}
QLabel#ReadOnly {
  border-image: url(ui/ButtonReadOnly.png);
  min-width: 20px;
  min-height: 20px;
  max-width: 20px;
  max-height: 20px;
}

QToolTip {
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  padding: 5px;
}

CTitleLabel {
  color: rgb(21, 47, 86);
  background-color: transparent;
  qproperty-outlineColor: rgb(180, 199, 219);
  border: 0px;
  border-radius: 0px;
}

/*
 ----- QLineEdit
*/
QLineEdit {
  color: black;
  background-color: white;
  border: none;
  border-radius: 5px;
  padding: 3px;
  min-height: 16px;
  selection-background-color: rgb(0, 117, 159);
}

QLineEdit[echoMode="2"] {
  lineedit-password-character: 9679;
}

QLineEdit:disabled,
QLineEdit:read-only {
  background-color: rgb(180, 199, 219);
}

QComboBox[styleSmall="true"] QLineEdit {
  min-height: 0px;
  border-radius: 0px;
}

/*
 ----- QPushButton, QToolButton, CShortcutButton
*/
QPushButton, QToolButton {
  color: rgb(180, 199, 219);
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  background: rgb(40, 74, 129);
  padding: 6px;
  min-width: 64px;
}

QPushButton[styleSmall="true"],
QToolButton[styleSmall="true"],
MRichTextEdit QToolButton {
  padding: 0px;
  min-width: 24px;
}

QPushButton[flat="true"],
QToolButton[flat="true"] {
  border: none;
  background: transparent;
}

CShortcutButton,
CEditorSearchBar>QPushButton,
MRichTextEdit QToolButton {
  padding: 0px;
  min-width: 24px;
  min-height: 24px;
  max-width: 24px;
  max-height: 24px;
  qproperty-iconSize: 24px;
}

COverlayButton>CShortcutButton {
  min-width: 64px;
  min-height: 48px;
  max-width: 64px;
  max-height: 48px;
  padding: -2px;
  qproperty-iconSize: 48px;
}

CDeviceButtonOverlay>CShortcutButton,
CDownloadButtonOverlay>CShortcutButton {
  min-width: 64px;
  min-height: 48px;
  max-width: 64px;
  max-height: 48px;
  padding: -2px;
  qproperty-iconSize: 24px;
}

QPushButton#RemoveFetishButtonX {
  padding: 2px;
  min-width: 1px;
}

QPushButton#CliButton {
  min-height: 24px;
  max-height: 24px;
}

QPushButton#AddShowBackgroundCode {
  qproperty-icon: url(ui/ButtonBackground.png) off,
                  url(ui/ButtonBackground.png) on;
}
QPushButton#AddShowIconCode,
QPushButton#SourceButton {
  qproperty-icon: url(ui/ButtonIcon.png) off,
                  url(ui/ButtonIcon.png) on;
}
QPushButton#AddShowImageCode,
QPushButton#AddImageCode,
QToolButton#f_image {
  qproperty-icon: url(ui/ButtonImage.png) off,
                  url(ui/ButtonImage.png) on;
}
QPushButton#AddTextCode,
QPushButton#AddSayCode {
  qproperty-icon: url(ui/ButtonText.png) off,
                  url(ui/ButtonText.png) on;
}
QPushButton#AddMetronomeCode {
  qproperty-icon: url(ui/ButtonMetronome.png) off,
                  url(ui/ButtonMetronome.png) on;
}
QPushButton#AddTimerCode,
QPushButton#AddTimerCode2 {
  qproperty-icon: url(ui/ButtonClock.png) off,
                  url(ui/ButtonClock.png) on;
}
QPushButton#AddNotificationCode,
QPushButton#AddNotificationCreateCode {
  qproperty-icon: url(ui/ButtonNotification.png) off,
                  url(ui/ButtonNotification.png) on;
}
QPushButton#DebugButton,
QPushButton#DebugLayoutButton {
  qproperty-icon: url(ui/ButtonPlay.png) off,
                  url(ui/ButtonPlay.png) on;
}
QPushButton#StopDebugButton,
QPushButton#StopDebugLayoutButton{
  qproperty-icon: url(ui/ButtonStop.png) off,
                  url(ui/ButtonStop.png) on;
}
QPushButton#PauseButton {
  qproperty-icon: url(ui/ButtonPause.png) off,
                  url(ui/ButtonPause.png) on;
}
QPushButton#PlayButton {
  qproperty-icon: url(ui/ButtonPlay.png) off,
                  url(ui/ButtonPlay.png) on;
}
QPushButton#StopButton {
  qproperty-icon: url(ui/ButtonStop.png) off,
                  url(ui/ButtonStop.png) on;
}
QPushButton#AddThreadCode {
  qproperty-icon: url(ui/ButtonThread.png) off,
                  url(ui/ButtonThread.png) on;
}
QPushButton#ExitButton,
QPushButton#AddEndCode {
  qproperty-icon: url(ui/ButtonExit.png) off,
                  url(ui/ButtonExit.png) on;
}
QPushButton#SaveButton {
  qproperty-icon: url(ui/ButtonSave.png) off,
                  url(ui/ButtonSave.png) on;
}
QPushButton#AddPatternElemButton,
QPushButton#AddResourceButton,
QPushButton#AddButtonButton,
QPushButton#AddTextColorButton,
QPushButton#AddBGColorButton,
QPushButton#AddFetishButton,
QPushButton#AddButtonButton,
QPushButton#AddSequenceElement,
QPushButton#AddNewAchievement {
  padding: 0px;
  min-width: 24px;
  min-height: 24px;
  max-width: 24px;
  max-height: 24px;
  qproperty-iconSize: 24px;
  qproperty-icon: url(ui/ButtonPlus.png) off,
                  url(ui/ButtonPlus.png) on;
}
QPushButton#AddWebResourceButton,
QToolButton#f_link {
  qproperty-icon: url(ui/ButtonWeb.png) off,
                  url(ui/ButtonWeb.png) on;
}
QPushButton#MapButton {
  qproperty-icon: url(ui/ButtonMap.png) off,
                  url(ui/ButtonMap.png) on;
}
QPushButton#RemovePatternElemButton,
QPushButton#RemoveResourceButton,
QPushButton#RemoveButtonButton,
QPushButton#RemoveTextColorButton,
QPushButton#RemoveBGColorButton,
QPushButton#RemoveFetishButton,
QPushButton#RemoveCode,
QPushButton#RemoveButtonButton,
QPushButton#RemoveSelectedSequenceElements {
  padding: 0px;
  min-width: 24px;
  min-height: 24px;
  max-width: 24px;
  max-height: 24px;
  qproperty-iconSize: 24px;
  qproperty-icon: url(ui/ButtonMinus.png) off,
                  url(ui/ButtonMinus.png) on;
}
QPushButton#TitleCardButton {
  qproperty-icon: url(ui/ButtonTitleCard.png) off,
                  url(ui/ButtonTitleCard.png) on;
}
QPushButton#EditDialogueTags,
QPushButton#TagsButton {
  qproperty-icon: url(ui/ButtonTag.png) off,
                  url(ui/ButtonTag.png) on;
}
QPushButton#AddNodeButton {
  qproperty-icon: url(ui/ButtonPlus.png) off,
                  url(ui/ButtonPlus.png) on;
}
QPushButton#RemoveDialogue,
QPushButton#RemoveNodeButton {
  qproperty-icon: url(ui/ButtonMinus.png) off,
                  url(ui/ButtonMinus.png) on;
}
QPushButton#HelpButton {
  qproperty-icon: url(ui/ButtonHelp.png) off,
                  url(ui/ButtonHelp.png) on;
}
QPushButton#ForardButton {
  qproperty-icon: url(ui/ButtonPlay.png) off,
                  url(ui/ButtonPlay.png) on;
}
QPushButton#BackButton {
  qproperty-icon: url(ui/ButtonArrowLeft.png) off,
                  url(ui/ButtonArrowLeft.png) on;
}
QPushButton#HomeButton {
  qproperty-icon: url(ui/ButtonHome.png) off,
                  url(ui/ButtonHome.png) on;
}
QPushButton#CloseButton {
  padding: 0px;
  min-width: 24px;
  min-height: 24px;
  max-width: 24px;
  max-height: 24px;
  qproperty-iconSize: 24px;
  qproperty-icon: url(ui/ButtonX.png) off,
                  url(ui/ButtonX.png) on;
}
QPushButton#FetishOverlayButton {
  qproperty-icon: url(ui/ButtonDotsHoriz.png) off,
                  url(ui/ButtonDotsHoriz.png) on;
}
QPushButton#ExportButton {
  qproperty-icon: url(ui/ButtonExport.png) off,
                  url(ui/ButtonExport.png) on;
}
QPushButton#AddScriptFile {
  qproperty-icon: url(ui/ButtonAddScript.png) off,
                  url(ui/ButtonAddScript.png) on;
}
QPushButton#AddLayoutButton,
QPushButton#AddLayoutFile {
  qproperty-icon: url(ui/ButtonAddLayout.png) off,
                  url(ui/ButtonAddLayout.png) on;
}
QPushButton#UndoButton,
QToolButton#f_undo {
  qproperty-icon: url(ui/ButtonUndo.png) off,
                  url(ui/ButtonUndo.png) on;
}
QPushButton#RedoButton,
QToolButton#f_redo {
  qproperty-icon: url(ui/ButtonRedo.png) off,
                  url(ui/ButtonRedo.png) on;
}
QPushButton#TreeViewButton {
  qproperty-icon: url(ui/ButtonTree.png) off,
                  url(ui/ButtonTree.png) on;
}
QPushButton#ExplorerViewButton {
  qproperty-icon: url(ui/FolderIcon.png) off,
                  url(ui/FolderIcon.png) on;
}
QPushButton#CdUpButton {
  qproperty-icon: url(ui/ButtonDotDot.png) off,
                  url(ui/ButtonDotDot.png) on;
}
QPushButton#DownloadButton {
  qproperty-icon: url(ui/ButtonDownload.png) off,
                  url(ui/ButtonDownload.png) on;
}
QPushButton#AddDeviceCode,
QPushButton#DeviceButton {
  qproperty-icon: url(ui/ButtonPlug.png) off,
                  url(ui/ButtonPlug.png) on;
}
QPushButton#AddAutioCode {
  qproperty-icon: url(ui/ButtonAudio.png) off,
                  url(ui/ButtonAudio.png) on;
}
QPushButton#AddPromptCode {
  qproperty-icon: url(ui/ButtonPrompt.png) off,
                  url(ui/ButtonPrompt.png) on;
}
QPushButton#AddChoiceCode {
  qproperty-icon: url(ui/ButtonChoice.png) off,
                  url(ui/ButtonChoice.png) on;
}
QPushButton#AddIfCode {
  qproperty-icon: url(ui/ButtonIf.png) off,
                  url(ui/ButtonIf.png) on;
}
QPushButton#AddEvalCode {
  qproperty-icon: url(ui/ButtonEval.png) off,
                  url(ui/ButtonEval.png) on;
}
QPushButton#AddGotoCode {
  qproperty-icon: url(ui/ButtonGoto.png) off,
                  url(ui/ButtonGoto.png) on;
}
QPushButton#AddEnableCode {
  qproperty-icon: url(ui/ButtonEnable.png) off,
                  url(ui/ButtonEnable.png) on;
}
QPushButton#AddDisableCode {
  qproperty-icon: url(ui/ButtonDisable.png) off,
                  url(ui/ButtonDisable.png) on;
}
QPushButton#AddNotificationCloseCode {
  qproperty-icon: url(ui/ButtonNotificationClose.png) off,
                  url(ui/ButtonNotificationClose.png) on;
}
QPushButton#SearchButton {
  qproperty-icon: url(ui/ButtonSearch.png) off,
                  url(ui/ButtonSearch.png) on;
}
QToolButton#f_bold {
  qproperty-icon: url(ui/ButtonBold.png) off,
                  url(ui/ButtonBold.png) on;
}
QToolButton#f_italic {
  qproperty-icon: url(ui/ButtonItalic.png) off,
                  url(ui/ButtonItalic.png) on;
}
QToolButton#f_underline {
  qproperty-icon: url(ui/ButtonUnderline.png) off,
                  url(ui/ButtonUnderline.png) on;
}
QToolButton#f_strikeout {
  qproperty-icon: url(ui/ButtonStrikethrough.png) off,
                  url(ui/ButtonStrikethrough.png) on;
}
QToolButton#f_list_bullet {
  qproperty-icon: url(ui/ButtonUList.png) off,
                  url(ui/ButtonUList.png) on;
}
QToolButton#f_list_ordered {
  qproperty-icon: url(ui/ButtonOList.png) off,
                  url(ui/ButtonOList.png) on;
}
QToolButton#f_indent_dec {
  qproperty-icon: url(ui/ButtonUnindent.png) off,
                  url(ui/ButtonUnindent.png) on;
}
QToolButton#f_indent_inc {
  qproperty-icon: url(ui/ButtonIndent.png) off,
                  url(ui/ButtonIndent.png) on;
}
QPushButton#ToolsButton {
  qproperty-icon: url(ui/ButtonTools.png) off,
                  url(ui/ButtonTools.png) on;
}
QPushButton#ErrorPushButton {
  qproperty-icon: url(ui/ButtonIcon.png) off,
                  url(ui/ButtonIcon.png) on;
  min-width: 32;
}
QPushButton#GridButton {
  qproperty-icon: url(ui/ButtonGrid.png) off,
                  url(ui/ButtonGrid.png) on;
}
QPushButton#NewSequence {
  qproperty-icon: url(ui/ButtonNewSequence.png) off,
                  url(ui/ButtonNewSequence.png) on;
}
QPushButton#SequenceProperties {
  qproperty-icon: url(ui/ButtonSequenceProperties.png) off,
                  url(ui/ButtonSequenceProperties.png) on;
}
QPushButton#AddSequenceLayer {
  qproperty-icon: url(ui/ButtonNewSequenceLayer.png) off,
                  url(ui/ButtonNewSequenceLayer.png) on;
}
QPushButton#RemoveSelectedSequenceLayer {
  qproperty-icon: url(ui/ButtonRemoveSequenceLayer.png) off,
                  url(ui/ButtonRemoveSequenceLayer.png) on;
}
QPushButton#AddDialogue {
  qproperty-icon: url(ui/ButtonDialogAdd.png) off,
                  url(ui/ButtonDialogAdd.png) on;
}
QPushButton#AddDialogueFrament {
  qproperty-icon: url(ui/ButtonDialogAddCondition.png) off,
                  url(ui/ButtonDialogAddCondition.png) on;
}
QPushButton#AddDialogueCategoryButton {
  qproperty-icon: url(ui/ButtonDialogAddFolder.png) off,
                  url(ui/ButtonDialogAddFolder.png) on;
}
QPushButton#EditDialogueContent {
  qproperty-icon: url(ui/ButtonDialogConfigure.png) off,
                  url(ui/ButtonDialogConfigure.png) on;
}


QPushButton:hover,
QToolButton:hover {
  color: white;
}

QPushButton:pressed,
QToolButton:pressed,
QPushButton:checked,
QToolButton:checked {
  color: white;
  background: rgb(21, 47, 86);
}

QPushButton:disabled,
QToolButton:disabled {
  color: white;
  background: rgb(3, 17, 49);
}

CMenuButton {
  color: rgb(180, 199, 219);
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  padding: 5px;
  background: rgb(40, 74, 129);
  min-width: 255px;
}

CMenuButton:hover {
  color: white;
}

CMenuButton:pressed {
  color: white;
  background: rgb(21, 47, 86);
}

/*
 ----- QToolButton in QTabBar
*/

/* the scroll buttons are tool buttons */
QTabBar QToolButton,
QTabBar QToolButton::menu-button,
QTabBar QToolButton::menu-arrow {
  border: none;
  border-radius: 0px;
  background: transparent;
}

QToolButton:hover,
QToolButton::menu-button:hover,
QTabBar QToolButton::menu-arrow:hover {
  background: transparent;
}

QTabBar QToolButton:pressed,
QTabBar QToolButton::menu-button:pressed,
QTabBar QToolButton::menu-arrow:pressed {
  background: transparent;
}

/* the arrow mark in the tool buttons */
QTabBar QToolButton::right-arrow {
  image: url(ui/ButtonPlay.png);
}
QTabBar QToolButton::right-arrow:hover {
  image: url(ui/ButtonPlay.png);
}
QTabBar QToolButton::right-arrow:selected {
  image: url(ui/ButtonPlay.png);
}

QTabBar QToolButton::left-arrow {
  image: url(ui/ButtonArrowLeft.png);
}
QTabBar QToolButton::left-arrow:hover {
  image: url(ui/ButtonArrowLeft.png);
}
QTabBar QToolButton::left-arrow:selected {
  image: url(ui/ButtonArrowLeft.png);
}


/*
 ----- QProgressBar
*/
QProgressBar {
  color: rgb(180, 199, 219);
  background-color: rgb(21, 47, 86);
  border: none;
  border-radius: 5px;
  text-align: center;
}

QProgressBar::chunk {
  background: rgb(40, 74, 129);
  width: 20px;
}

CProgressBar {
  background-color: transparent;
  border: 2px solid transparent;
  qproperty-primaryColor: rgb(3, 17, 49);
  qproperty-secondaryColor: rgb(0, 117, 159);
  qproperty-tertiaryColor: rgb(21, 47, 86);
  qproperty-drawDecoration: false;
}

/*
 ----- QScrollBar
*/
QSlider:horizontal{
  background: transparent;
  height: 24px;
  margin-left: 24px;
  margin-right: 24px;
}
QSlider:vertical {
  background: transparent;
  width: 24px;
  margin-top: 24px;
  margin-bottom: 24px;
}

QScrollBar:horizontal {
  background: rgb(3, 17, 49);
  height: 24px;
  margin-left: 24px;
  margin-right: 24px;
}
QScrollBar:vertical {
  background: rgb(3, 17, 49);
  width: 24px;
  margin-top: 24px;
  margin-bottom: 24px;
}

QSlider::handle,
QScrollBar::handle {
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  background: rgb(40, 74, 129);
}
QSlider::handle:vertical,
QScrollBar::handle:vertical{
  min-height: 24px;
}
QSlider::handle:horizontal,
QScrollBar::handle:horizontal {
  min-width: 24px;
}
QSlider::handle:horizontal:hover,
QSlider::handle:vertical:hover,
QScrollBar::handle:horizontal:hover,
QScrollBar::handle:vertical:hover {
  background: rgb(40, 74, 129);
}
QSlider::handle:horizontal:pressed,
QSlider::handle:vertical:pressed,
QScrollBar::handle:horizontal:pressed,
QScrollBar::handle:vertical:pressed {
  background: rgb(21, 47, 86);
}


QSlider::add-line:horizontal,
QScrollBar::add-line:horizontal {
  border: transparent;
  width: 24px;
  subcontrol-position: right;
  subcontrol-origin: margin;
}
QSlider::sub-line:horizontal,
QScrollBar::sub-line:horizontal {
  border: transparent;
  width: 24px;
  subcontrol-position: left;
  subcontrol-origin: margin;
  position: absolute;
  right: 24px;
}
QSlider::add-line:vertical,
QScrollBar::add-line:vertical {
  border: transparent;
  height: 24px;
  subcontrol-position: bottom;
  subcontrol-origin: margin;
}
QSlider::sub-line:vertical,
QScrollBar::sub-line:vertical {
  border: transparent;
  height: 24px;
  subcontrol-position: top;
  subcontrol-origin: margin;
  position: absolute;
  bottom: 24px;
}


QScrollBar:left-arrow:horizontal,
QScrollBar::right-arrow:horizontal,
QScrollBar::up-arrow:vertical,
QScrollBar::down-arrow:vertical {
  border: none;
  height: 32px;
  width: 32px;
  background: rgb(3, 17, 49);
}
QScrollBar:left-arrow:horizontal {
  image: url(ui/ButtonArrowLeft.png);
}
QScrollBar:right-arrow:horizontal {
  image: url(ui/ButtonPlay.png);
}
QScrollBar:up-arrow:vertical {
  image: url(ui/ButtonArrowUp.png);
}
QScrollBar:down-arrow:vertical {
  image: url(ui/ButtonArrowDown.png);
}

QScrollBar::add-page:horizontal,
QScrollBar::sub-page:horizontal,
QScrollBar::add-page:vertical,
QScrollBar::sub-page:vertical{
  background: rgb(3, 17, 49);
}

/*
 ----- QScrollArea
*/
QScrollArea {
  background: transparent;
}
QScrollArea > QWidget
{
  background: transparent;
}
QScrollArea > QWidget > QWidget
{
  background: transparent;
}
QScrollArea > QWidget > QScrollBar
{
  background: palette(base);
}
QScrollArea > QWidget > QScrollBar
{
  background: palette(base);
}

/*
 ----- QComboBox
*/
QComboBox {
  color: rgb(180, 199, 219);
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  padding: 3px;
  background: rgb(40, 74, 129);
  min-width: 64px;
}

QComboBox:editable {
  color: black;
  background-color: white;
  border: none;
  border-radius: 5px;
  padding: 5px;
  min-height: 16px;
  selection-background-color: rgb(0, 117, 159);
}

QComboBox QAbstractItemView {
  color: rgb(180, 199, 219);
  background-color: rgb(21, 47, 86);
  border: 2px solid black;
  border-radius: 0px;
  padding: 5px;
  selection-background-color: rgb(3, 17, 49);
}

/* shift the text when the popup opens */
QComboBox:on {
  padding-left: 5px;
}

QComboBox::drop-down {
  subcontrol-origin: padding;
  subcontrol-position: top right;
  width: 24px;

  border-left-width: 1px;
  border-left-color: rgb(21, 47, 86);
  border-left-style: solid; /* just a single line */
  border-top-right-radius: 0px; /* same radius as the QComboBox */
  border-bottom-right-radius: 0px;
}
QComboBox::drop-down:editable {
  background: rgb(40, 74, 129);
}

QComboBox::down-arrow {
  border-image: url(ui/ButtonArrowDown.png);
  min-height: 24px;
  min-width: 24px;
}

/* QComboBox gets the "on" state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
  background: rgb(40, 74, 129);
}

QComboBox[styleSmall="true"] {
  padding: 0px;
  min-width: 0px;
  border: none;
}

QComboBox[styleSmall="true"]:drop-down {
  width: 18px;
}

QComboBox[styleSmall="true"]:down-arrow {
  min-height: 14px;
  min-width: 14px;
  max-height: 14px;
  max-width: 14px;
}

/*
 ----- QSpinBox, QDoubleSpinBox, QTimeEdit
*/
QDoubleSpinBox,
QTimeEdit,
QSpinBox,
CLongLongSpinBox {
  color: black;
  background-color: white;
  border: none;
  border-radius: 5px;
  padding: 5px;
  height: 24px;
  selection-background-color: rgb(0, 117, 159);
  padding-right: 16px; /* make room for the arrows */
}
QDoubleSpinBox:disabled,
QTimeEdit:disabled,
QSpinBox:disabled,
CLongLongSpinBox:disabled {
  color: silver;
  background: rgb(3, 17, 49);
}

QDoubleSpinBox::up-button,
QTimeEdit::up-button,
QSpinBox::up-button,
CLongLongSpinBox::up-button {
  subcontrol-origin: border;
  subcontrol-position: top right; /* position at the top right corner */

  width: 12px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
  border: 1px solid rgb(0, 117, 159);
  border-radius: 2px;
  background: rgb(40, 74, 129);
}
QDoubleSpinBox::up-button:hover,
QTimeEdit::up-button:hover,
QSpinBox::up-button:hover,
CLongLongSpinBox::up-button:hover {
  background: rgb(40, 74, 129);
}
QDoubleSpinBox::up-button:pressed,
QTimeEdit::up-button:pressed,
QSpinBox::up-button:pressed,
CLongLongSpinBox::up-button:pressed {
  background: rgb(21, 47, 86);
}

QDoubleSpinBox::up-arrow,
QTimeEdit::up-arrow,
QSpinBox::up-arrow,
CLongLongSpinBox::up-arrow {
  image: url(ui/ButtonPlus.png);
  width: 12px;
  height: 12px;
}
QDoubleSpinBox::up-arrow:disabled, QDoubleSpinBox::up-arrow:off,
QTimeEdit::up-arrow:disabled, QTimeEdit::up-arrow:off,
QSpinBox::up-arrow:disabled, QSpinBox::up-arrow:off,
CLongLongSpinBox::up-arrow:disabled, CLongLongSpinBox::up-arrow:off { /* off state when value is max */
  image: url(ui/ButtonPlus.png);
  color: white;
  background: rgb(3, 17, 49);
}

QDoubleSpinBox::down-button,
QTimeEdit::down-button,
QSpinBox::down-button,
CLongLongSpinBox::down-button {
  subcontrol-origin: border;
  subcontrol-position: bottom right; /* position at bottom right corner */

  width: 12px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
  border: 1px solid rgb(0, 117, 159);
  border-radius: 0px;
  background: rgb(40, 74, 129);
}
QDoubleSpinBox::down-button:hover,
QTimeEdit::down-button:hover,
QSpinBox::down-button:hover,
CLongLongSpinBox::down-button:hover {
  background: rgb(40, 74, 129);
}
QDoubleSpinBox::down-button:pressed,
QTimeEdit::down-button:pressed,
QSpinBox::down-button:pressed,
CLongLongSpinBox::down-button:pressed {
  background: rgb(21, 47, 86);
}

QDoubleSpinBox::down-arrow,
QTimeEdit::down-arrow,
QSpinBox::down-arrow,
CLongLongSpinBox::down-arrow {
  image: url(ui/ButtonMinus.png);
  width: 12px;
  height: 12px;
}
QDoubleSpinBox::down-arrow:disabled,
QTimeEdit::down-arrow:disabled,
QSpinBox::down-arrow:disabled,
CLongLongSpinBox::down-arrow:disabled,
QDoubleSpinBox::down-arrow:off,
QTimeEdit::down-arrow:off,
QSpinBox::down-arrow:off,
CLongLongSpinBox::down-arrow:off { /* off state when value in min */
  image: url(ui/ButtonMinus.png);
  color: white;
  background: rgb(3, 17, 49);
}

/*
 ----- QMenu, QDialog
*/
QMenu,
QDialog {
  color: rgb(180, 199, 219);
  background-color: rgb(21, 47, 86);
  border: 2px solid black;
  border-radius: 5px;
  padding: 5px;
}

QMenu::item,
QDialog::item {
  padding: 2px 25px 2px 20px;
  border: 1px solid transparent; /* reserve space for selection border */
}

QMenu::item:selected,
QDialog::item:selected {
  color: white;
  background: rgb(3, 17, 49);
}

QMenu::icon:checked,
QDialog::item:checked{ /* appearance of a 'checked' icon */
  border: 2px solid rgb(0, 117, 159);
  background: rgb(40, 74, 129);
  position: absolute;
  top: 1px;
  right: 1px;
  bottom: 1px;
  left: 1px;
}

QMenu::separator,
QDialog::separator {
  height: 2px;
  background: rgb(0, 117, 159);
  margin-left: 10px;
  margin-right: 5px;
}

QMenu::indicator,
QDialog::indicator {
  width: 13px;
  height: 13px;
}

/*
  ---- COverlayBase
*/
COverlayBase {
  background-color: rgb(21, 47, 86);
  border: 2px solid black;
  border-radius: 5px;
  padding: 10px;
}
COverlayBase#HelpButtonOverlay,
COverlayBase#DownloadButtonOverlay,
COverlayBase#DeviceButtonOverlay {
  color: transparent;
  background-color: transparent;
  border: none;
  border-radius: 0px;
  padding: 0;
}

CTextEditZoomEnabler {
  background-color: rgba(40, 74, 129, 200);
  border-radius: 10px;
  border: none;
  padding: 0;
}

CTextEditZoomEnabler>QLabel {
  color: white;
  background-color: rgba(40, 74, 129, 200);
}

/*
 ----- QHeaderView
*/
QHeaderView::section {
  color: rgb(180, 199, 219);
  border: 0px solid transparent;
  border-radius: 0px;
  padding: 0px;
  background: rgb(3, 17, 49);
  padding-left: 3px;
}

QHeaderView::section:checked {
  color: white;
  background: rgb(40, 74, 129);
}

/* style the sort indicator */
QHeaderView::down-arrow {
  image: url(ui/ButtonArrowDown.png);
  min-width: 16px;
  min-height: 16px;
  max-width: 16px;
  max-height: 16px;
  subcontrol-position: right center;
  subcontrol-origin: padding;
}

QHeaderView::up-arrow {
  image: url(ui/ButtonArrowUp.png);
  min-width: 16px;
  min-height: 16px;
  max-width: 16px;
  max-height: 16px;
  subcontrol-position: right center;
  subcontrol-origin: padding;
}

/*
 ----- QListView, QTreeView, QTableView
*/
QListView, QTreeView, QTableView {
  color: rgb(180, 199, 219);
  background-color: rgb(21, 47, 86);
  alternate-background-color: rgb(40, 74, 129);
}

QListView, QTreeView, QTableView {
  show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

QTreeView#pHelpSearchTree {
  min-width: 100px;
  width: 100px;
}

QListView::item,
QTreeView::item,
QTableView::item {
  margin: 0px 0px 0px 0px;
  border: 0px;
  padding: 0px;
  padding-right: 3px;
  padding-left: 3px;
}

QListView::item::text,
QTreeView::item::text,
QTableView::item::text {
  min-height: 18px;
}

QListView::item:alternate,
QTreeView::item:alternate,
QTableView::item:alternate {
  background: rgb(40, 74, 129);
}

QListView::item:selected,
QTreeView::item:selected,
QTableView::item:selected {
  color: rgb(180, 199, 219);
  border: 1px solid rgb(0, 117, 159);
  background: rgb(40, 74, 129);
}

QListView::item:hover,
QTreeView::item:hover,
QTableView::item:hover {
  color: white;
  border: 1px solid rgb(0, 117, 159);
  background: rgb(40, 74, 129);
}

QListView::item:disabled,
QTreeView::item:disabled,
QTableView::item:disabled {
  color: silver;
}

QListView::branch:selected {
  background: transparent;
}

QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
  image: url(ui/ButtonPlay.png);
  min-width: 16px;
  min-height: 16px;
  max-width: 16px;
  max-height: 16px;
}

QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings  {
  image: url(ui/ButtonArrowDown.png);
  min-width: 16px;
  min-height: 16px;
  max-width: 16px;
  max-height: 16px;
}

CResourceDetailView {
  color: rgb(180, 199, 219);
  background-color: transparent;
  qproperty-iconSize: 64px;
  qproperty-spacing: 10px;
}

/*
 ----- QPlainTextEdit
*/
QTextEdit,
QPlainTextEdit,
QTextBrowser {
    background-color: rgb(21, 47, 86);
    color: rgb(180, 199, 219);
    border: 2px solid rgb(0, 117, 159);
    selection-background-color: rgb(0, 117, 159);
}

/*
 ----- Timeline
*/
CTimelineWidget,
CTimelineWidgetBackground,
CTimelineWidget > QWidget,
CTimelineWidget > QWidget > QWidget
{
  background-color: rgb(3, 17, 49);
}

CTimelineWidget
{
  qproperty-alternateBackgroundColor: rgb(0, 117, 159);
  qproperty-dropIndicationColor: rgb(0, 117, 159);
  qproperty-gridColor: rgb(22, 69, 97);
  qproperty-outOfRangeColor: rgba(200, 200, 200, 100);
  qproperty-selectionColor: white;
}

CTimelineWidgetControls
{
  background-color: rgb(3, 17, 49);
  border: 1px solid rgb(0, 117, 159);
  border-radius: 0px;

  qproperty-cursorColor: white;
}

CTimelineWidget > CTimelineWidgetControls > QWidget#Controls
{
  border: 1px solid rgb(52, 69, 97);
}

CTimelineWidgetLayer {
  background-color: rgb(40, 74, 129);
  border: 1px solid rgb(0, 117, 159);
  border-radius: 0px;

  min-height: 70;
  max-height: 70;

  qproperty-selectionColor: white;
  qproperty-timelineBackgroundColor: rgb(3, 17, 49);
}

CTimelineWidgetLayerBackground {
  qproperty-iconWidth: 16;
  qproperty-iconHeight: 16;
  qproperty-instructionConnectorColor: white;

  qproperty-instructionMarker: url(ui/InstructionIcon.png);
  qproperty-instructionMarkerOpenLeft: url(ui/InstructionIconOpen.png);
  qproperty-instructionMarkerOpenRight: url(ui/InstructionIconClosed.png);
}

/*
 ----- Specific
*/
QMainWindow {
  background-image: url(ui/Background.png);
}

QQuickWidget {
  background-color: rgb(21, 47, 86);
}

CProjectCardSelectionWidget {
  qproperty-selectionColor: rgb(0, 117, 159);
}

CTimerWidget {
  qproperty-primaryColor: rgb(3, 17, 49);
  qproperty-secondaryColor: rgb(0, 117, 159);
  qproperty-tertiaryColor: rgb(21, 47, 86);
}

CScriptEditorWidget {
  qproperty-bracketColor0: rgb(191, 64, 191);
  qproperty-bracketColor1: rgb(255, 191, 0);
  qproperty-bracketColor2: rgb(0, 150, 255);
  qproperty-bracketColor3: rgb(237, 41, 57);
  qproperty-iconFolded: url(ui/ButtonPlay.png);
  qproperty-iconUnfolded: url(ui/ButtonArrowDown.png);
  qproperty-foldAreaBackgroundColor: rgb(3, 17, 49);
  qproperty-lineNumberBackgroundColor: rgb(3, 17, 49);
  qproperty-lineNumberTextColor: rgb(180, 199, 219);
  qproperty-highlightLineColor: rgb(40, 74, 129);
  qproperty-highlightSearchBackgroundColor: rgb(3, 17, 49);
  qproperty-highlightSearchColor: silver;
  qproperty-wordHighlightColor: rgb(236, 227, 215);
  qproperty-widgetsBackgroundColor: rgb(3, 17, 49);
  qproperty-theme: "Solarized Dark";
}

CEditorSceneNodeWidget {
  background: transparent;
  qproperty-normalBoundaryColor: rgb(0, 117, 159);
  qproperty-selectedBoundaryColor: rgb(0, 117, 159);
  qproperty-gradientColor0: rgb(21, 47, 86);
  qproperty-gradientColor1: rgb(21, 47, 86);
  qproperty-gradientColor2: rgb(21, 47, 86);
  qproperty-gradientColor3: rgb(21, 47, 86);
  qproperty-shadowColor: rgb(0, 117, 159);
  qproperty-fontColor: rgb(180, 199, 219);
  qproperty-fontColorFaded: rgb(180, 199, 219);
  qproperty-connectionPointColor: rgb(40, 74, 129);
  qproperty-backgroundColor: rgb(21, 47, 86);
  qproperty-fineGridColor: rgb(3, 17, 49);
  qproperty-coarseGridColor: rgb(3, 17, 49);
  qproperty-normalConnectionColor: rgb(0, 117, 159);
  qproperty-selectedConnectionColor: rgb(0, 117, 159);
  qproperty-selectedConnectionHaloColor: rgb(40, 74, 129);
  qproperty-hoveredConnectionColor: rgb(0, 117, 159);
}

CEditorActionBar {
  qproperty-spacing: 1;
}

CResourceDetailView {
  qproperty-iconFile: url(ui/FileIcon.png);
  qproperty-iconFolder: url(ui/FolderIcon.png);
  qproperty-iconLayout: url(ui/ButtonLayout.png);
  qproperty-iconSequence: url(ui/IconSequence.png);
  qproperty-spacing: 6;
}

CResourceModelView {
  qproperty-cardIcon: url(ui/ButtonTitleCard.png);
  qproperty-layoutIcon: url(ui/ButtonLayout.png);
  qproperty-iconSize: 16;
}

CDeviceSelectorWidget {
  qproperty-selectionIcon: url(ui/ButtonPlug.png);
}

CHelpOverlay {
  qproperty-linkColor: rgb(0, 117, 159);
}

CEditorResourceWidget {
  qproperty-icon: url(ui/ButtonResourceWidget.png) off,
                  url(ui/ButtonResourceWidget.png) on;
}
CEditorResourceDisplayWidget {
  qproperty-icon: url(ui/ButtonResourceDisplay.png) off,
                  url(ui/ButtonResourceDisplay.png) on;
}
CEditorProjectSettingsWidget {
  qproperty-icon: url(ui/ButtonProjectSettings.png) off,
                  url(ui/ButtonProjectSettings.png) on;
}
CEditorSceneNodeWidget {
  qproperty-icon: url(ui/ButtonSceneNodeWidget.png) off,
                  url(ui/ButtonSceneNodeWidget.png) on;
}
CEditorCodeWidget {
  qproperty-icon: url(ui/ButtonCode.png) off,
                  url(ui/ButtonCode.png) on;
}
CEditorPatternEditorWidget {
  qproperty-icon: url(ui/ButtonSequence.png) off,
                  url(ui/ButtonSequence.png) on;
}
CEditorDialogueWidget {
  qproperty-icon: url(ui/ButtonNotification.png) off,
                  url(ui/ButtonNotification.png) on;
}

CAchievementWidget {
  background-color: rgb(21, 47, 86);
  border: 2px solid rgb(0, 117, 159);
  border-radius: 5px;
  padding: 6px;
}

CSelectableResourceLabel {
  qproperty-unsetIcon: url(ui/ButtonBackground.png);
}

CAchievementWidget > CSelectableResourceLabel {
  min-height: 120px;
  min-width: 120px;
  max-height: 120px;
  max-width: 120px;
}

CDebugOverlay {
  background-color: rgba(0, 0, 0, 150);
  border: 0px;
  border-radius: 0px;
}
